#+TITLE: UD02 - Paralaje en CSS
#+AUTHOR: Angel Berlanas

#+latex_header: \usepackage{minted}                                              
#+latex_header: \usepackage{xcolor}
#+latex_header: \usemintedstyle{monokai}    %% sets default for all source-code blocks  
#+latex_header: \definecolor{bg}{HTML}{555555}
#+latex_header: \setminted{bgcolor=bg}
#+latex_header: \hypersetup{colorlinks=true,linkcolor=black}


* Efectos de Paralaje en CSS 

** ¿En qué consiste?

El efecto de Paralaje es la simulación en un entorno 2D de que estamos
observando a través de una ventana un mundo en 3 Dimensiones, donde dependiendo
de la lejania del objeto respecto al observador, este se desplaza a diferente
velocidad. 

Es el efecto de mirar a través de la ventana de un tren, los objetos que se
encuentran próximos a nosotros parecen desplazarse a una velocidad mayor,
mientras que los más lejanos apenas se mueven.

** Maneras de implementarlo

Se tratar de algo bastante complejo respecto a lo visto anteriormente en
clase, si buscamos en /Internet/ ~efecto de paralaje JS~, veremos multitud de
librerias ya realizadas que con mayor o menor éxito y posibilidad de
configuración se adaptan /a nuestras necesidades/.

Con el objetivo de plantear las *bases* de como funciona este tipo de efecto,
vamos a decantarnos por una implementación del efecto en CSS Puro (/Pure CSS/),
que nos permitirá no /distraernos/ con el código en ~JS~. Sin duda a medida que
el desarrollador en ciernes (el alumn@), vaya desarrollando sus habilidades,
buscará soluciones más complejas y vistosas que le permitirán un mayor
despliegue de su talento. Por ahora...CSS es nuestro amigo.

\newpage
** HTML

#+NAME: Codigo HTML para paralaje
#+attr_latex: :options bgcolor=bg
#+BEGIN_SRC html 

    <body>
            <div class="navbar"><span>Paralaje en CSS</span></div>  
            <div class="parallax-wrapper">
                <div class="content">
                    <p>Lorem ipsum dolor sit amet,... 
                       ....
                       Donec in justo eu ligula semper.</p>
                </div>
            </div>
            <div class="regular-wrapper">
                <div class="content">
                    <p>Lorem ipsum dolor sit amet,...
                       .... 
                       Donec in justo eu ligula semper.</p>
                </div>
            </div>
    </body>
#+END_SRC

Comenzamos con poner el fondo al 100%.

#+NAME: Codigo HTML para paralaje
#+attr_latex: :options bgcolor=bg
#+BEGIN_SRC css


    .parallax-wrapper {
        width: 100vw;
        height:100vh;
        padding-top:20vh;
        box-sizing: border-box;
    }
    .regular-wrapper {
        width: 100vw;
        height:100vh;
        padding-top:20vh;
        background-image: url("/your-bkg.png");
    }
    .content {
        margin: 0 auto;
        padding: 50px;
        width: 50%;
        background: #aaa;
    }

#+END_SRC

Pasamos a ponerlo absoluto


#+NAME: Codigo CSS para paralaje
#+attr_latex: :options bgcolor=bg
#+BEGIN_SRC css

    .parallax-wrapper::before {
        content:"";
        width: 100vw;
        height: 100vh;
        top:0;
        left:0;
        background-image: url("/ruta-al-background.png");
        position: absolute;
        z-index: -1;
    }

#+END_SRC


Vamos añadiendo a los contenidos el código ~CSS~:

#+NAME: Codigo CSS para paralaje
#+attr_latex: :options bgcolor=bg
#+BEGIN_SRC css

    html {
        overflow: hidden;
    }
    body {
        height: 100vh;
        perspective: 1px;
        transform-style: preserve-3d;
        overflow-x:hidden;
        overflow-y:auto;
    }
    .parallax-wrapper {
        transform-style: preserve-3d;
    }

#+END_SRC


Transformamos y escalamos antes.

#+NAME: Codigo CSS para paralaje
#+attr_latex: :options bgcolor=bg
#+BEGIN_SRC css

    .parallax-wrapper::before {
        transform:translateZ(-1px) scale(2);
    }

#+END_SRC

Antes de esto modificamos el efecto.

#+NAME: Codigo CSS para paralaje
#+attr_latex: :options bgcolor=bg
#+BEGIN_SRC css

    .parallax-wrapper::before {
        z-index: -1;
    }
    .regular-wrapper {
        z-index: 2;
        position: relative;
    }

#+END_SRC




